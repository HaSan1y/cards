(()=>{"use strict";const e=SimpleWebAuthnBrowser;console.log("Script loaded"),document.querySelector("[data-email]");const t=document.querySelector("[data-modal]"),o=document.querySelector("[data-close]");document.addEventListener("DOMContentLoaded",(function(){console.log("DOM fully loaded");const t=document.getElementById("authForm"),o=document.getElementById("submitButton");console.log("Form element:",t),console.log("Submit button:",o),o?o.addEventListener("click",(async t=>{t.preventDefault(),console.log("Form submitted"),o.hasAttribute("data-login")?(console.log("Login attempt"),await async function(){console.log("Login function called");try{const t=document.getElementById("username").value;if(console.log("Attempting to log in with username:",t),!t)return void r("Please enter a username");const o=await fetch(`${n}/init-auth?username=${t}`,{credentials:"include"});if(!o.ok){const e=await o.json();throw new Error(e.error||`HTTP error! status: ${o.status}`)}const i=await o.json();console.log("Received options from /init-auth:",JSON.stringify(i,null,2));const a=await(0,e.startAuthentication)(i),l=await fetch(`${n}/verify-auth`,{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),s=await l.json();if(!l.ok)throw new Error(s.error||"Verification failed");s.verified?r(`Successfully logged in ${t}`):r("Failed to log in")}catch(e){console.error("Login error:",e),e instanceof DOMException&&"NotAllowedError"===e.name?r("Login cancelled."):e instanceof Error?r(e.message||"An unknown login error occurred."):r("An unexpected error occurred during login.")}}()):o.hasAttribute("data-signup")?(console.log("Signup attempt"),await async function(){console.log("Signup function called");try{const t=document.querySelector("[data-email]").value;console.log("Registering with email:",t);const o=await fetch(`${n}/init-register?email=${t}`,{credentials:"include"});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const i=await o.json();console.log("Server response:",i);const a=await(0,e.startRegistration)(i);console.log("Registration JSON:",a);const l=await fetch(`${n}/verify-register`,{credentials:"include",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),s=await l.json();l.ok||r(s.error),s.verified?r(`Successfully registered ${t}`):r("Failed to register")}catch(e){"NotAllowedError"===e.name?r("Signup not allowed: "+e.message):e instanceof Error?r(e.message):r("An unknown error occurred"),console.error("Signup error:",e)}}()):console.log("Button has neither data-login nor data-signup attribute")})):console.error("Form element not found")})),o.addEventListener("click",(()=>t.close()));const n="https://db-2-cards.vercel.app"===window.location.origin?"https://db-2-cards.vercel.app/api":"http://localhost:3000"===window.location.origin?"http://localhost:3000/api":"https://elegant-bubblegum-a62895.netlify.app"===window.location.origin?"https://elegant-bubblegum-a62895.netlify.app/.netlify/functions":"http://localhost:3000/api";function r(e){t.querySelector("[data-content]").innerText=e,t.showModal()}})();